#pragma checksum "E:\Projects\AnalysisOfTranslationErrors\AnalysisOfTranslationErrors\Views\AnnotationPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "DB24A1639D511C3D2D6518EAA6C7C195"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AnalysisOfTranslationErrors
{
    partial class AnnotationPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AnnotationPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAnnotationPage_Bindings
        {
            private global::AnalysisOfTranslationErrors.AnnotationPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj14;
            private global::Windows.UI.Xaml.Controls.Button obj15;
            private global::Windows.UI.Xaml.Controls.Button obj16;
            private global::Windows.UI.Xaml.Controls.TextBox obj17;
            private global::Windows.UI.Xaml.Controls.TextBox obj20;
            private global::Windows.UI.Xaml.Controls.TextBox obj21;
            private global::Windows.UI.Xaml.Controls.TextBlock obj30;
            private global::Windows.UI.Xaml.Controls.Button obj32;
            private global::Windows.UI.Xaml.Controls.Button obj33;
            private global::Windows.UI.Xaml.Controls.TextBox obj34;
            private global::Windows.UI.Xaml.Controls.TextBox obj41;
            private global::Windows.UI.Xaml.Controls.TextBox obj42;

            private AnnotationPage_obj1_BindingsTracking bindingsTracking;

            public AnnotationPage_obj1_Bindings()
            {
                this.bindingsTracking = new AnnotationPage_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 14: // Views\AnnotationPage.xaml line 352
                        this.obj14 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 15: // Views\AnnotationPage.xaml line 354
                        this.obj15 = (global::Windows.UI.Xaml.Controls.Button)target;
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            this.dataRoot.GetSearchedPrevious();
                        };
                        break;
                    case 16: // Views\AnnotationPage.xaml line 363
                        this.obj16 = (global::Windows.UI.Xaml.Controls.Button)target;
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            this.dataRoot.GetSearchedNext();
                        };
                        break;
                    case 17: // Views\AnnotationPage.xaml line 336
                        this.obj17 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        break;
                    case 20: // Views\AnnotationPage.xaml line 300
                        this.obj20 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        break;
                    case 21: // Views\AnnotationPage.xaml line 286
                        this.obj21 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        break;
                    case 30: // Views\AnnotationPage.xaml line 176
                        this.obj30 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 32: // Views\AnnotationPage.xaml line 184
                        this.obj32 = (global::Windows.UI.Xaml.Controls.Button)target;
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            this.dataRoot.GetPrevious();
                        };
                        break;
                    case 33: // Views\AnnotationPage.xaml line 193
                        this.obj33 = (global::Windows.UI.Xaml.Controls.Button)target;
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            this.dataRoot.GetNext();
                        };
                        break;
                    case 34: // Views\AnnotationPage.xaml line 157
                        this.obj34 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.bindingsTracking.RegisterTwoWayListener_34(this.obj34);
                        break;
                    case 41: // Views\AnnotationPage.xaml line 106
                        this.obj41 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        break;
                    case 42: // Views\AnnotationPage.xaml line 91
                        this.obj42 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        break;
                    default:
                        break;
                }
            }

            // IAnnotationPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::AnalysisOfTranslationErrors.AnnotationPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::AnalysisOfTranslationErrors.AnnotationPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::AnalysisOfTranslationErrors.ViewModels.AnnotationPageViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SearchedSent(obj.SearchedSent, phase);
                        this.Update_ViewModel_CurrentSentence(obj.CurrentSentence, phase);
                    }
                }
            }
            private void Update_ViewModel_SearchedSent(global::AnalysisOfTranslationErrors.Models.ActiveSentence obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SearchedSent(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SearchedSent_ActiveIndex(obj.ActiveIndex, phase);
                        this.Update_ViewModel_SearchedSent_ActiveModSysSentence(obj.ActiveModSysSentence, phase);
                        this.Update_ViewModel_SearchedSent_ActiveRefSentence(obj.ActiveRefSentence, phase);
                        this.Update_ViewModel_SearchedSent_ActiveSrcSentence(obj.ActiveSrcSentence, phase);
                    }
                }
            }
            private void Update_ViewModel_SearchedSent_ActiveIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AnnotationPage.xaml line 352
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj.ToString(), null);
                }
            }
            private void Update_ViewModel_SearchedSent_ActiveModSysSentence(global::AnalysisOfTranslationErrors.Models.Sentence obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SearchedSent_ActiveModSysSentence(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SearchedSent_ActiveModSysSentence_Text(obj.Text, phase);
                    }
                }
            }
            private void Update_ViewModel_SearchedSent_ActiveModSysSentence_Text(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AnnotationPage.xaml line 336
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj17, obj, null);
                }
            }
            private void Update_ViewModel_SearchedSent_ActiveRefSentence(global::AnalysisOfTranslationErrors.Models.Sentence obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SearchedSent_ActiveRefSentence(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SearchedSent_ActiveRefSentence_Text(obj.Text, phase);
                    }
                }
            }
            private void Update_ViewModel_SearchedSent_ActiveRefSentence_Text(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AnnotationPage.xaml line 300
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj20, obj, null);
                }
            }
            private void Update_ViewModel_SearchedSent_ActiveSrcSentence(global::AnalysisOfTranslationErrors.Models.Sentence obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SearchedSent_ActiveSrcSentence(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SearchedSent_ActiveSrcSentence_Text(obj.Text, phase);
                    }
                }
            }
            private void Update_ViewModel_SearchedSent_ActiveSrcSentence_Text(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AnnotationPage.xaml line 286
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj21, obj, null);
                }
            }
            private void Update_ViewModel_CurrentSentence(global::AnalysisOfTranslationErrors.Models.ActiveSentence obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_CurrentSentence(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CurrentSentence_ActiveIndex(obj.ActiveIndex, phase);
                        this.Update_ViewModel_CurrentSentence_ActiveModSysSentence(obj.ActiveModSysSentence, phase);
                        this.Update_ViewModel_CurrentSentence_ActiveRefSentence(obj.ActiveRefSentence, phase);
                        this.Update_ViewModel_CurrentSentence_ActiveSrcSentence(obj.ActiveSrcSentence, phase);
                    }
                }
            }
            private void Update_ViewModel_CurrentSentence_ActiveIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AnnotationPage.xaml line 176
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj30, obj.ToString(), null);
                }
            }
            private void Update_ViewModel_CurrentSentence_ActiveModSysSentence(global::AnalysisOfTranslationErrors.Models.Sentence obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_CurrentSentence_ActiveModSysSentence(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CurrentSentence_ActiveModSysSentence_Text(obj.Text, phase);
                    }
                }
            }
            private void Update_ViewModel_CurrentSentence_ActiveModSysSentence_Text(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AnnotationPage.xaml line 157
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj34, obj, null);
                }
            }
            private void Update_ViewModel_CurrentSentence_ActiveRefSentence(global::AnalysisOfTranslationErrors.Models.Sentence obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_CurrentSentence_ActiveRefSentence(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CurrentSentence_ActiveRefSentence_Text(obj.Text, phase);
                    }
                }
            }
            private void Update_ViewModel_CurrentSentence_ActiveRefSentence_Text(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AnnotationPage.xaml line 106
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj41, obj, null);
                }
            }
            private void Update_ViewModel_CurrentSentence_ActiveSrcSentence(global::AnalysisOfTranslationErrors.Models.Sentence obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_CurrentSentence_ActiveSrcSentence(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CurrentSentence_ActiveSrcSentence_Text(obj.Text, phase);
                    }
                }
            }
            private void Update_ViewModel_CurrentSentence_ActiveSrcSentence_Text(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AnnotationPage.xaml line 91
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj42, obj, null);
                }
            }
            private void UpdateTwoWay_34_Text()
            {
                if (this.initialized)
                {
                    this.dataRoot.ViewModel.CurrentSentence.ActiveModSysSentence.Text = this.obj34.Text;
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AnnotationPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<AnnotationPage_obj1_Bindings> weakRefToBindingObj; 

                public AnnotationPage_obj1_BindingsTracking(AnnotationPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AnnotationPage_obj1_Bindings>(obj);
                }

                public AnnotationPage_obj1_Bindings TryGetBindingObject()
                {
                    AnnotationPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_SearchedSent(null);
                    UpdateChildListeners_ViewModel_SearchedSent_ActiveModSysSentence(null);
                    UpdateChildListeners_ViewModel_SearchedSent_ActiveRefSentence(null);
                    UpdateChildListeners_ViewModel_SearchedSent_ActiveSrcSentence(null);
                    UpdateChildListeners_ViewModel_CurrentSentence(null);
                    UpdateChildListeners_ViewModel_CurrentSentence_ActiveModSysSentence(null);
                    UpdateChildListeners_ViewModel_CurrentSentence_ActiveRefSentence(null);
                    UpdateChildListeners_ViewModel_CurrentSentence_ActiveSrcSentence(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AnnotationPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AnalysisOfTranslationErrors.ViewModels.AnnotationPageViewModel obj = sender as global::AnalysisOfTranslationErrors.ViewModels.AnnotationPageViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_SearchedSent(obj.SearchedSent, DATA_CHANGED);
                                bindings.Update_ViewModel_CurrentSentence(obj.CurrentSentence, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "SearchedSent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SearchedSent(obj.SearchedSent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CurrentSentence":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentSentence(obj.CurrentSentence, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AnalysisOfTranslationErrors.ViewModels.AnnotationPageViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::AnalysisOfTranslationErrors.ViewModels.AnnotationPageViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SearchedSent(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AnnotationPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AnalysisOfTranslationErrors.Models.ActiveSentence obj = sender as global::AnalysisOfTranslationErrors.Models.ActiveSentence;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_SearchedSent_ActiveIndex(obj.ActiveIndex, DATA_CHANGED);
                                bindings.Update_ViewModel_SearchedSent_ActiveModSysSentence(obj.ActiveModSysSentence, DATA_CHANGED);
                                bindings.Update_ViewModel_SearchedSent_ActiveRefSentence(obj.ActiveRefSentence, DATA_CHANGED);
                                bindings.Update_ViewModel_SearchedSent_ActiveSrcSentence(obj.ActiveSrcSentence, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ActiveIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SearchedSent_ActiveIndex(obj.ActiveIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ActiveModSysSentence":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SearchedSent_ActiveModSysSentence(obj.ActiveModSysSentence, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ActiveRefSentence":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SearchedSent_ActiveRefSentence(obj.ActiveRefSentence, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ActiveSrcSentence":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SearchedSent_ActiveSrcSentence(obj.ActiveSrcSentence, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AnalysisOfTranslationErrors.Models.ActiveSentence cache_ViewModel_SearchedSent = null;
                public void UpdateChildListeners_ViewModel_SearchedSent(global::AnalysisOfTranslationErrors.Models.ActiveSentence obj)
                {
                    if (obj != cache_ViewModel_SearchedSent)
                    {
                        if (cache_ViewModel_SearchedSent != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SearchedSent).PropertyChanged -= PropertyChanged_ViewModel_SearchedSent;
                            cache_ViewModel_SearchedSent = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SearchedSent = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SearchedSent;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SearchedSent_ActiveModSysSentence(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AnnotationPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AnalysisOfTranslationErrors.Models.Sentence obj = sender as global::AnalysisOfTranslationErrors.Models.Sentence;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_SearchedSent_ActiveModSysSentence_Text(obj.Text, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Text":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SearchedSent_ActiveModSysSentence_Text(obj.Text, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AnalysisOfTranslationErrors.Models.Sentence cache_ViewModel_SearchedSent_ActiveModSysSentence = null;
                public void UpdateChildListeners_ViewModel_SearchedSent_ActiveModSysSentence(global::AnalysisOfTranslationErrors.Models.Sentence obj)
                {
                    if (obj != cache_ViewModel_SearchedSent_ActiveModSysSentence)
                    {
                        if (cache_ViewModel_SearchedSent_ActiveModSysSentence != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SearchedSent_ActiveModSysSentence).PropertyChanged -= PropertyChanged_ViewModel_SearchedSent_ActiveModSysSentence;
                            cache_ViewModel_SearchedSent_ActiveModSysSentence = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SearchedSent_ActiveModSysSentence = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SearchedSent_ActiveModSysSentence;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SearchedSent_ActiveRefSentence(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AnnotationPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AnalysisOfTranslationErrors.Models.Sentence obj = sender as global::AnalysisOfTranslationErrors.Models.Sentence;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_SearchedSent_ActiveRefSentence_Text(obj.Text, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Text":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SearchedSent_ActiveRefSentence_Text(obj.Text, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AnalysisOfTranslationErrors.Models.Sentence cache_ViewModel_SearchedSent_ActiveRefSentence = null;
                public void UpdateChildListeners_ViewModel_SearchedSent_ActiveRefSentence(global::AnalysisOfTranslationErrors.Models.Sentence obj)
                {
                    if (obj != cache_ViewModel_SearchedSent_ActiveRefSentence)
                    {
                        if (cache_ViewModel_SearchedSent_ActiveRefSentence != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SearchedSent_ActiveRefSentence).PropertyChanged -= PropertyChanged_ViewModel_SearchedSent_ActiveRefSentence;
                            cache_ViewModel_SearchedSent_ActiveRefSentence = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SearchedSent_ActiveRefSentence = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SearchedSent_ActiveRefSentence;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SearchedSent_ActiveSrcSentence(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AnnotationPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AnalysisOfTranslationErrors.Models.Sentence obj = sender as global::AnalysisOfTranslationErrors.Models.Sentence;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_SearchedSent_ActiveSrcSentence_Text(obj.Text, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Text":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SearchedSent_ActiveSrcSentence_Text(obj.Text, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AnalysisOfTranslationErrors.Models.Sentence cache_ViewModel_SearchedSent_ActiveSrcSentence = null;
                public void UpdateChildListeners_ViewModel_SearchedSent_ActiveSrcSentence(global::AnalysisOfTranslationErrors.Models.Sentence obj)
                {
                    if (obj != cache_ViewModel_SearchedSent_ActiveSrcSentence)
                    {
                        if (cache_ViewModel_SearchedSent_ActiveSrcSentence != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SearchedSent_ActiveSrcSentence).PropertyChanged -= PropertyChanged_ViewModel_SearchedSent_ActiveSrcSentence;
                            cache_ViewModel_SearchedSent_ActiveSrcSentence = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SearchedSent_ActiveSrcSentence = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SearchedSent_ActiveSrcSentence;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_CurrentSentence(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AnnotationPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AnalysisOfTranslationErrors.Models.ActiveSentence obj = sender as global::AnalysisOfTranslationErrors.Models.ActiveSentence;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_CurrentSentence_ActiveIndex(obj.ActiveIndex, DATA_CHANGED);
                                bindings.Update_ViewModel_CurrentSentence_ActiveModSysSentence(obj.ActiveModSysSentence, DATA_CHANGED);
                                bindings.Update_ViewModel_CurrentSentence_ActiveRefSentence(obj.ActiveRefSentence, DATA_CHANGED);
                                bindings.Update_ViewModel_CurrentSentence_ActiveSrcSentence(obj.ActiveSrcSentence, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ActiveIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentSentence_ActiveIndex(obj.ActiveIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ActiveModSysSentence":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentSentence_ActiveModSysSentence(obj.ActiveModSysSentence, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ActiveRefSentence":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentSentence_ActiveRefSentence(obj.ActiveRefSentence, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ActiveSrcSentence":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentSentence_ActiveSrcSentence(obj.ActiveSrcSentence, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AnalysisOfTranslationErrors.Models.ActiveSentence cache_ViewModel_CurrentSentence = null;
                public void UpdateChildListeners_ViewModel_CurrentSentence(global::AnalysisOfTranslationErrors.Models.ActiveSentence obj)
                {
                    if (obj != cache_ViewModel_CurrentSentence)
                    {
                        if (cache_ViewModel_CurrentSentence != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_CurrentSentence).PropertyChanged -= PropertyChanged_ViewModel_CurrentSentence;
                            cache_ViewModel_CurrentSentence = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_CurrentSentence = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_CurrentSentence;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_CurrentSentence_ActiveModSysSentence(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AnnotationPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AnalysisOfTranslationErrors.Models.Sentence obj = sender as global::AnalysisOfTranslationErrors.Models.Sentence;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_CurrentSentence_ActiveModSysSentence_Text(obj.Text, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Text":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentSentence_ActiveModSysSentence_Text(obj.Text, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AnalysisOfTranslationErrors.Models.Sentence cache_ViewModel_CurrentSentence_ActiveModSysSentence = null;
                public void UpdateChildListeners_ViewModel_CurrentSentence_ActiveModSysSentence(global::AnalysisOfTranslationErrors.Models.Sentence obj)
                {
                    if (obj != cache_ViewModel_CurrentSentence_ActiveModSysSentence)
                    {
                        if (cache_ViewModel_CurrentSentence_ActiveModSysSentence != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_CurrentSentence_ActiveModSysSentence).PropertyChanged -= PropertyChanged_ViewModel_CurrentSentence_ActiveModSysSentence;
                            cache_ViewModel_CurrentSentence_ActiveModSysSentence = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_CurrentSentence_ActiveModSysSentence = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_CurrentSentence_ActiveModSysSentence;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_CurrentSentence_ActiveRefSentence(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AnnotationPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AnalysisOfTranslationErrors.Models.Sentence obj = sender as global::AnalysisOfTranslationErrors.Models.Sentence;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_CurrentSentence_ActiveRefSentence_Text(obj.Text, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Text":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentSentence_ActiveRefSentence_Text(obj.Text, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AnalysisOfTranslationErrors.Models.Sentence cache_ViewModel_CurrentSentence_ActiveRefSentence = null;
                public void UpdateChildListeners_ViewModel_CurrentSentence_ActiveRefSentence(global::AnalysisOfTranslationErrors.Models.Sentence obj)
                {
                    if (obj != cache_ViewModel_CurrentSentence_ActiveRefSentence)
                    {
                        if (cache_ViewModel_CurrentSentence_ActiveRefSentence != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_CurrentSentence_ActiveRefSentence).PropertyChanged -= PropertyChanged_ViewModel_CurrentSentence_ActiveRefSentence;
                            cache_ViewModel_CurrentSentence_ActiveRefSentence = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_CurrentSentence_ActiveRefSentence = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_CurrentSentence_ActiveRefSentence;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_CurrentSentence_ActiveSrcSentence(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AnnotationPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::AnalysisOfTranslationErrors.Models.Sentence obj = sender as global::AnalysisOfTranslationErrors.Models.Sentence;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_CurrentSentence_ActiveSrcSentence_Text(obj.Text, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Text":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentSentence_ActiveSrcSentence_Text(obj.Text, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::AnalysisOfTranslationErrors.Models.Sentence cache_ViewModel_CurrentSentence_ActiveSrcSentence = null;
                public void UpdateChildListeners_ViewModel_CurrentSentence_ActiveSrcSentence(global::AnalysisOfTranslationErrors.Models.Sentence obj)
                {
                    if (obj != cache_ViewModel_CurrentSentence_ActiveSrcSentence)
                    {
                        if (cache_ViewModel_CurrentSentence_ActiveSrcSentence != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_CurrentSentence_ActiveSrcSentence).PropertyChanged -= PropertyChanged_ViewModel_CurrentSentence_ActiveSrcSentence;
                            cache_ViewModel_CurrentSentence_ActiveSrcSentence = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_CurrentSentence_ActiveSrcSentence = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_CurrentSentence_ActiveSrcSentence;
                        }
                    }
                }
                public void RegisterTwoWayListener_34(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_34_Text();
                        }
                    };
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // Views\AnnotationPage.xaml line 1
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)(target);
                    ((global::Windows.UI.Xaml.Controls.Page)element1).Loaded += this.Page_LoadedAsync;
                }
                break;
            case 2: // Views\AnnotationPage.xaml line 15
                {
                    this.ViewModel = (global::AnalysisOfTranslationErrors.ViewModels.AnnotationPageViewModel)(target);
                }
                break;
            case 3: // Views\AnnotationPage.xaml line 23
                {
                    this.SentenceStyle = (global::Windows.UI.Xaml.Style)(target);
                }
                break;
            case 4: // Views\AnnotationPage.xaml line 43
                {
                    this.CardTemplateSelector = (global::AnalysisOfTranslationErrors.ViewModels.CardTemplateSelector)(target);
                }
                break;
            case 6: // Views\AnnotationPage.xaml line 74
                {
                    this.rootPivot = (global::Windows.UI.Xaml.Controls.Pivot)(target);
                }
                break;
            case 7: // Views\AnnotationPage.xaml line 391
                {
                    this.SearchByCategoryBox = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.SearchByCategoryBox).TextChanged += this.SearchByCategoryBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.SearchByCategoryBox).SuggestionChosen += this.SearchByCategoryBox_SuggestionChosen;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.SearchByCategoryBox).QuerySubmitted += this.SearchByCategoryBox_QuerySubmitted;
                }
                break;
            case 8: // Views\AnnotationPage.xaml line 272
                {
                    this.LabelFilter = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 9: // Views\AnnotationPage.xaml line 276
                {
                    this.FilterTextBlock = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 10: // Views\AnnotationPage.xaml line 281
                {
                    this.SrcPanel2 = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 11: // Views\AnnotationPage.xaml line 293
                {
                    this.RefPanel2 = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 12: // Views\AnnotationPage.xaml line 306
                {
                    this.SysPanel2 = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 13: // Views\AnnotationPage.xaml line 318
                {
                    this.ModSysPanel2 = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 15: // Views\AnnotationPage.xaml line 354
                {
                    this.PreviousSearchedSentenceButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 16: // Views\AnnotationPage.xaml line 363
                {
                    this.NextSearchedSentenceButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 18: // Views\AnnotationPage.xaml line 326
                {
                    this.ToggleSwitch2 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 19: // Views\AnnotationPage.xaml line 313
                {
                    this.SearcedSysEditBox = (global::Windows.UI.Xaml.Controls.RichEditBox)(target);
                }
                break;
            case 22: // Views\AnnotationPage.xaml line 209
                {
                    this.ListOfIssues = (global::Windows.UI.Xaml.Controls.Border)(target);
                }
                break;
            case 23: // Views\AnnotationPage.xaml line 242
                {
                    this.ClearOneAnnoButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.ClearOneAnnoButton).Click += this.ClearOneAnnoButton_Click;
                }
                break;
            case 24: // Views\AnnotationPage.xaml line 246
                {
                    this.ClearSentenceButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.ClearSentenceButton).Click += this.ClearSentenceButton_Click;
                }
                break;
            case 25: // Views\AnnotationPage.xaml line 223
                {
                    this.annoTreeView = (global::Windows.UI.Xaml.Controls.TreeView)(target);
                    ((global::Windows.UI.Xaml.Controls.TreeView)this.annoTreeView).ItemInvoked += this.annoTreeView_ItemInvoked;
                }
                break;
            case 26: // Views\AnnotationPage.xaml line 86
                {
                    this.SrcPanel = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 27: // Views\AnnotationPage.xaml line 99
                {
                    this.RefPanel = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 28: // Views\AnnotationPage.xaml line 113
                {
                    this.SysPanel = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 29: // Views\AnnotationPage.xaml line 136
                {
                    this.ModSysPanel = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 30: // Views\AnnotationPage.xaml line 176
                {
                    this.IndexSentence = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 31: // Views\AnnotationPage.xaml line 180
                {
                    this.SearchSentenceSuggestBox = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.SearchSentenceSuggestBox).QuerySubmitted += this.SearchSentenceSuggestBox_QuerySubmitted;
                }
                break;
            case 32: // Views\AnnotationPage.xaml line 184
                {
                    this.PreviousSentenceButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 33: // Views\AnnotationPage.xaml line 193
                {
                    this.NextSentenceButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 34: // Views\AnnotationPage.xaml line 157
                {
                    this.ModSysTextBox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                    ((global::Windows.UI.Xaml.Controls.TextBox)this.ModSysTextBox).GotFocus += this.ModSysTextBox_GotFocus;
                }
                break;
            case 35: // Views\AnnotationPage.xaml line 144
                {
                    this.ToggleSwitch = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 36: // Views\AnnotationPage.xaml line 153
                {
                    this.SaveModSentence = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.SaveModSentence).Click += this.SaveModSentence_Click;
                }
                break;
            case 37: // Views\AnnotationPage.xaml line 129
                {
                    this.SysEditBox = (global::Windows.UI.Xaml.Controls.RichEditBox)(target);
                    ((global::Windows.UI.Xaml.Controls.RichEditBox)this.SysEditBox).SelectionChanged += this.SysEditBox_SelectionChanged;
                }
                break;
            case 38: // Views\AnnotationPage.xaml line 120
                {
                    this.LabelSystem = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 39: // Views\AnnotationPage.xaml line 122
                {
                    this.LabelSystem2 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 40: // Views\AnnotationPage.xaml line 124
                {
                    this.AnnoNameTextBlock = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 41: // Views\AnnotationPage.xaml line 106
                {
                    this.RefTextBox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 42: // Views\AnnotationPage.xaml line 91
                {
                    this.SrcTextBox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                    ((global::Windows.UI.Xaml.Controls.TextBox)this.SrcTextBox).SelectionChanged += this.SrcTextBox_SelectionChanged;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\AnnotationPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    AnnotationPage_obj1_Bindings bindings = new AnnotationPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

